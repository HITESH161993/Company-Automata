/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package company;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author HITESH
 */
public class srchfrm extends javax.swing.JInternalFrame {

    /**
     * Creates new form srchfrm
     */
    public srchfrm(String s)
    {
         initComponents();
         if(s.equals("EMP"))
         {
         t1.setVisible(false);
         l1.setVisible(false);
         t3.setVisible(false);
         b2.setVisible(false);
         try
        {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          Connection c=DriverManager.getConnection("jdbc:odbc:company");
          Statement st=c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet rs=st.executeQuery("select * from empd where edep='"+t2.getText()+"'");
          MyModel m1=new MyModel(rs);
          jt.setModel(m1);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }}
         else if(s.equals("ALL"))
         {
             l2.setVisible(false);
             t1.setVisible(false);
             t2.setVisible(false);
             b2.setVisible(false);
             b1.setVisible(false);
             try
        {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          Connection c=DriverManager.getConnection("jdbc:odbc:company");
          Statement st=c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet rs=st.executeQuery("select * from empd");
          MyModel m1=new MyModel(rs);
          jt.setModel(m1);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
         
         }
    
    }
    public srchfrm() {
        initComponents();
        b2.setVisible(false); 
        t2.setVisible(false);
        l1.setVisible(false);
        t3.setVisible(false);
        try
        {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          Connection c=DriverManager.getConnection("jdbc:odbc:company");
          Statement st=c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet rs=st.executeQuery("select * from department");
          MyModel m1=new MyModel(rs);
          jt.setModel(m1);
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jt = new javax.swing.JTable();
        b1 = new javax.swing.JButton();
        l2 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        b2 = new javax.swing.JButton();
        t2 = new javax.swing.JTextField();
        l1 = new javax.swing.JLabel();
        t3 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ALL RECORDS");

        jt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jt);

        b1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/company/del2.jpg"))); // NOI18N
        b1.setText("DELETE");
        b1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                me(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mx(evt);
            }
        });
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        l2.setText("Enter the Name Of The Department");

        t1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });
        t1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keytyped(evt);
            }
        });

        b2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/company/search12.png"))); // NOI18N
        b2.setText("SEARCH");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        t2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2ActionPerformed(evt);
            }
        });
        t2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keytyped3(evt);
            }
        });

        l1.setText("Enter The Name Of The Employee");

        t3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3ActionPerformed(evt);
            }
        });
        t3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keytyped2(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l1)
                        .addGap(18, 18, 18)
                        .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l2)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b1)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
 registerfrm r1=new registerfrm("DELETE");
      r1.setVisible(true);
      javax.swing.JDesktopPane p1;
      p1=this.getDesktopPane();
      p1.add(r1);
      dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void keytyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keytyped
try
{
String s=t1.getText();
   Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          Connection c=DriverManager.getConnection("jdbc:odbc:company");
          Statement st=c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet rs=st.executeQuery("select * from department where dname like '%"+s+"%'");
           MyModel m1=new MyModel(rs);
          jt.setModel(m1);
}
catch(Exception e)
{
    System.out.println(e);
}        // TODO add your handling code here:
    }//GEN-LAST:event_keytyped

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_b2ActionPerformed

    private void keytyped2(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keytyped2
    try
{
String s=t3.getText();
   Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          Connection c=DriverManager.getConnection("jdbc:odbc:company");
          Statement st=c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet rs=st.executeQuery("select * from empd where ename like '%"+s+"%'");
           MyModel m1=new MyModel(rs);
          jt.setModel(m1);
}
catch(Exception e)
{
    System.out.println(e);
}    // TODO add your handling code here:
    }//GEN-LAST:event_keytyped2

    private void keytyped3(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keytyped3
     try
{
    String s1=t2.getText();
   Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
          Connection c=DriverManager.getConnection("jdbc:odbc:company");
          Statement st=c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
          ResultSet rs=st.executeQuery("select * from empd where edep like '%"+s1+"%'");
           MyModel m1=new MyModel(rs);
          jt.setModel(m1);
}
catch(Exception e)
{
    System.out.println(e);
}     // TODO add your handling code here:
    }//GEN-LAST:event_keytyped3

    private void t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t3ActionPerformed

    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t2ActionPerformed

    private void me(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_me
 b1.setBackground(Color.DARK_GRAY);  
    b1.setForeground(Color.WHITE);        // TODO add your handling code here:
    }//GEN-LAST:event_me

    private void mx(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mx
  b1.setBackground(Color.LIGHT_GRAY);
  b1.setForeground(Color.BLACK);        // TODO add your handling code here:
    }//GEN-LAST:event_mx

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    // End of variables declaration//GEN-END:variables
}
 class MyModel extends AbstractTableModel
    {
        ResultSet rs;
        ResultSetMetaData rsmd;
MyModel(ResultSet rs1)
{
    try
    {
        rs=rs1;
        rsmd=rs.getMetaData();
    int C=rsmd.getColumnCount();
    int r=rs.getRow();
    }
    catch(Exception e)
    {
        System.out.println(e);
    }
    }
        @Override
        public int getRowCount() {
            try
            {
                rs.last();
                return rs.getRow();
            }
            catch(Exception e)
            {
                return -1;
            }
           
           //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public int getColumnCount() {
            try
            {
                return rsmd.getColumnCount();
            }
            catch(Exception e)
            {
                return -1;
            }
            }
             //To change body of generated methods, choose Tools | Templates.
        

        @Override
        public Object getValueAt(int r, int C) {
            try
            {
                rs.absolute(r+1);
                return rs.getObject(C+1);
            }
            catch(Exception e)
            {
                return null;
            }
            }
        
        public String getColumnName(int C)
        {
            try
            {
                return rsmd.getColumnName(C+1);
            }
            catch(Exception e)
            {
                return null;
            }
            
        }
            
           
        }
